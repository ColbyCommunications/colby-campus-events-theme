{"remainingRequest":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/buble-loader/index.js??ref--2-1!/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/babel-loader/lib/index.js??ref--2-2!/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/eslint-loader/index.js!/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/import-glob/index.js!/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/resources/assets/scripts/util/Router.js","dependencies":[{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/resources/assets/scripts/util/Router.js","mtime":1596567181604},{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/buble-loader/index.js","mtime":1487914911000},{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/eslint-loader/index.js","mtime":1499322156000},{"path":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/node_modules/import-glob/index.js","mtime":1475481585000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) { descriptor.writable = true; } Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) { _defineProperties(Constructor.prototype, protoProps); } if (staticProps) { _defineProperties(Constructor, staticProps); } return Constructor; }\n\nimport camelCase from './camelCase';\n/**\n * DOM-based Routing\n *\n * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish\n *\n * The routing fires all common scripts, followed by the page specific scripts.\n * Add additional events for more control over timing e.g. a finalize event\n */\n\nvar Router = /*#__PURE__*/function () {\n  /**\n   * Create a new Router\n   * @param {Object} routes\n   */\n  function Router(routes) {\n    _classCallCheck(this, Router);\n\n    this.routes = routes;\n  }\n  /**\n   * Fire Router events\n   * @param {string} route DOM-based route derived from body classes (`<body class=\"...\">`)\n   * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.\n   * @param {string} [arg] Any custom argument to be passed to the event.\n   */\n\n\n  _createClass(Router, [{\n    key: \"fire\",\n    value: function fire(route) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'init';\n      var arg = arguments.length > 2 ? arguments[2] : undefined;\n      document.dispatchEvent(new CustomEvent('routed', {\n        bubbles: true,\n        detail: {\n          route: route,\n          fn: event\n        }\n      }));\n      var fire = route !== '' && this.routes[route] && typeof this.routes[route][event] === 'function';\n\n      if (fire) {\n        this.routes[route][event](arg);\n      }\n    }\n    /**\n     * Automatically load and fire Router events\n     *\n     * Events are fired in the following order:\n     *  * common init\n     *  * page-specific init\n     *  * page-specific finalize\n     *  * common finalize\n     */\n\n  }, {\n    key: \"loadEvents\",\n    value: function loadEvents() {\n      var _this = this;\n\n      // Fire common init JS\n      this.fire('common'); // Fire page-specific init JS, and then finalize JS\n\n      document.body.className.toLowerCase().replace(/-/g, '_').split(/\\s+/).map(camelCase).forEach(function (className) {\n        _this.fire(className);\n\n        _this.fire(className, 'finalize');\n      }); // Fire common finalize JS\n\n      this.fire('common', 'finalize');\n    }\n  }]);\n\n  return Router;\n}();\n\nexport default Router;",{"version":3,"file":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme/resources/assets/scripts/util/Router.js","sources":["resources/assets/scripts/util/Router.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport camelCase from './camelCase';\n/**\n * DOM-based Routing\n *\n * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish\n *\n * The routing fires all common scripts, followed by the page specific scripts.\n * Add additional events for more control over timing e.g. a finalize event\n */\n\nvar Router = /*#__PURE__*/function () {\n  /**\n   * Create a new Router\n   * @param {Object} routes\n   */\n  function Router(routes) {\n    _classCallCheck(this, Router);\n\n    this.routes = routes;\n  }\n  /**\n   * Fire Router events\n   * @param {string} route DOM-based route derived from body classes (`<body class=\"...\">`)\n   * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.\n   * @param {string} [arg] Any custom argument to be passed to the event.\n   */\n\n\n  _createClass(Router, [{\n    key: \"fire\",\n    value: function fire(route) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'init';\n      var arg = arguments.length > 2 ? arguments[2] : undefined;\n      document.dispatchEvent(new CustomEvent('routed', {\n        bubbles: true,\n        detail: {\n          route: route,\n          fn: event\n        }\n      }));\n      var fire = route !== '' && this.routes[route] && typeof this.routes[route][event] === 'function';\n\n      if (fire) {\n        this.routes[route][event](arg);\n      }\n    }\n    /**\n     * Automatically load and fire Router events\n     *\n     * Events are fired in the following order:\n     *  * common init\n     *  * page-specific init\n     *  * page-specific finalize\n     *  * common finalize\n     */\n\n  }, {\n    key: \"loadEvents\",\n    value: function loadEvents() {\n      var _this = this;\n\n      // Fire common init JS\n      this.fire('common'); // Fire page-specific init JS, and then finalize JS\n\n      document.body.className.toLowerCase().replace(/-/g, '_').split(/\\s+/).map(camelCase).forEach(function (className) {\n        _this.fire(className);\n\n        _this.fire(className, 'finalize');\n      }); // Fire common finalize JS\n\n      this.fire('common', 'finalize');\n    }\n  }]);\n\n  return Router;\n}();\n\nexport default Router;"],"names":[],"mappings":"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","sourceRoot":"/Users/bkwaltz/platform_sites/projects/sandbox/web/wp-content/themes/colby-campus-events-theme"}]}